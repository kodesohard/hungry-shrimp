{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../FeedItems.svelte",
    "../../GamePlay.svelte",
    "../../Options.svelte",
    "../../Shrimp.svelte",
    "../../Icon.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport GamePlay from './components/GamePlay.svelte'\n\timport Options from './components/Options.svelte'\n\timport { options } from './stores'\n\timport Icon from './ui/Icon.svelte'\n\n\tlet stat = {\n\t\tscore: 0,\n\t\tlives: 3\n\t}\n\n  // add better graphics\n  // add portals\n  // deploy it\n  // score animation\n  // arcade fonts\n\n  \n</script>\n\t\n<div class=\"container\">\n\t<h1>Hungry Shrimp</h1>\n\n\t<main style=\"background-image: url('../../images/{$options.gameMap}.jpg');\">\n\t\t<GamePlay bind:stat />\n\t</main>\n\n\t<div class=\"control-panel\">\n\t\t<h2>Score {stat.score}</h2>\n\t\t<div style=\"display: block; margin: 6px;\">\n\t\t{#each Array(stat.lives) as i}\n\t\t\t<Icon iconName=\"gamepad\" />\n\t\t{/each}\n\t\t</div>\n\t\t<Options />\n\t</div>\n\n</div>\n\n<style>\n\t.container {\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t\ttext-align: center;\n\t}\n\n\tmain {\n\t\tdisplay: inline-block;\n\t\twidth: 1000px;\n    \theight: 700px;\n    \tborder: solid black 1px;\n    \tposition: relative;\n    \tmargin: 20px auto;\n\t\tbackground-image: url(\"../../images/giantMonster.jpg\");\n\t\tbackground-size: cover;\n\t}\n\n\t.control-panel {\n\t\tdisplay: inline-block;\n\t\tpadding: 25px;\n\t\tvertical-align: top;\n\t\tborder: solid rgb(110, 108, 108) 1px;\n\t\tborder-radius: 8px;\n\t    margin-top: 19px;\n    \twidth: 200px;\n    \theight: 650px;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-align: center;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t\tmargin: auto;\n\t}\n\n\th2 {\n\t\ttext-align: center;\n\t\tfont-size: 1.5em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n    import Icon from '../ui/Icon.svelte'\n\n    export let feedItems\n    \n    let feedMap = {\n        '-1': 'mushroom',\n        0: 'gamepad',\n        1: 'shrimp-1',\n        2: 'gold-shrimp-1',\n        3: 'shrimp-pair',\n        4: 'lobster',\n    }\n\n</script>\n\n{#each feedItems as feed}\n    <div class=\"feed\" style=\"left: {feed.x}px; top: {feed.y}px;\">\n        <Icon iconName={feedMap[feed.score]} />\n    </div>\n{/each}\n\n<style>\n    .feed {\n        position: absolute;\n    }\n</style>",
    "<script>\n\timport Shrimp from './Shrimp.svelte'\n    import FeedItems from './FeedItems.svelte'\n    import { options } from '../stores.js'\n    import { fade, fly } from 'svelte/transition'\n    import Icon from '../ui/Icon.svelte'\n    import { \n        moveShrimp,\n        collision,\n        getNewFeedItems,\n        isReverse,\n        getKeyCodeDirection\n    } from '../../utils/GamePlayUtils'\n    \n    \n    let gameOver = false\n    let gameRunning = false\n    let intervalId\n\n    let shrimpPositions = [\n            { x: 50, y: 350 },\n            { x: 25, y: 350 },\n            { x: 0, y: 350 }\n        ]\n    let direction = ''\n    let feedItems\n    \n    export let stat\n\n    $: interval = $options.advanced ? 80 : 180  \n\n    function startGame() {\n        initialState()\n        intervalId = setInterval(() => {\n            if (!direction || gameOver) {\n                return\n            }\n            \n            shrimpPositions.pop()\n            const { ...curHead } = shrimpPositions[0]\n            const newHead = moveShrimp(direction, curHead)\n            shrimpPositions = [newHead, ...shrimpPositions]\n            if (isGameOver()) {\n                return\n            }\n            \n            feedItems.forEach((feed, idx) => {\n                if (collision(newHead, feed)) {\n                    console.log('FEEDITEMS111', JSON.stringify(feedItems))\n                    const consumedFeed = feedItems.splice(idx, 1, ...generateNewFeedItems())[0]\n                    feedItems = feedItems\n                    console.log('FEEDITEMS', JSON.stringify(feedItems))\n                    stat.score = stat.score + (consumedFeed.score || 0) + 15\n                    stat.lives = stat.lives + (consumedFeed.life || 0)\n                    if (stat.score > 15 && $options.music !== 'terror.mp3') {\n                        $options.music = 'terror.mp3'\n                    }\n                    shrimpPositions = [...shrimpPositions, shrimpPositions[1]]\n                }   \n            })\n               \n        }, interval)\n    }\n\n    function generateNewFeedItems() {\n        let newFeeds = []\n        const availableStats = feedItems.reduce((acc, item) => {\n            acc.score += (item.score || 0)\n            acc.lives += (item.life || 0)\n            return acc\n        }, { score: 0, lives: 0 })\n\n        if (stat.score <= 5) {\n            newFeeds = getNewFeedItems(1, 1)\n        } else if (stat.score > 5 && stat.score <= 10) {\n            newFeeds = getNewFeedItems(2, 2)\n        } else if (stat.score > 10) {\n            newFeeds = getNewFeedItems(3, 3)\n            if (stat.lives >= 2) {\n                newFeeds.push(getNewFeedItems(1, 4)[0])\n            } \n            if (stat.lives < 3) {\n                newFeeds.push(getNewFeedItems(1, 5)[0])\n            }\n        }\n\n        console.log('AVStat', stat, JSON.stringify(availableStats), newFeeds)\n        return newFeeds\n    }\n\n    function isGameOver() {\n        const head = shrimpPositions[0]\n\n        if (\n            head.x < 0 ||\n            head.x >= 970 ||\n            head.y < 0 ||\n            head.y >= 690 ||\n            shrimpPositions.slice(1).find(s => collision(s, head)) ||\n            stat.lives === 0\n        ) {\n            $options.music = 'theEnd.mp3'\n            gameOver = true\n            return true\n        }\n    }\n\n    function onKeyDown(event) {\n        const newDirection = getKeyCodeDirection(event.keyCode)\n        if (newDirection && !isReverse(direction, newDirection)) {\n            direction = newDirection\n            if (!gameRunning) {\n                startGame()\n            }\n        }\n    }\n\n    function initialState() {\n        clearInterval(intervalId)\n        gameRunning = true\n        gameOver = false\n        $options.music = 'theBeginning.mp3'\n\n        stat = { score: 0, lives: 3 }\n        direction = 'right' \n        shrimpPositions = [\n            { x: 50, y: 350 },\n            { x: 25, y: 350 },\n            { x: 0, y: 350 }\n        ]\n        feedItems = getNewFeedItems(1, 1)\n    }\n</script>\n\n<div class=\"game-play\">\n    {#if gameRunning}\n        <Shrimp {shrimpPositions} />\n        <FeedItems {feedItems}/>\n    {/if}\n    {#if gameOver}\n        <div transition:fly=\"{{ y: 200, duration: 2000 }}\">\n            <p>Game Over!</p>\n            <p>Score: {stat.score}</p>\n            <p>Lives: {stat.lives}</p>\n            <Icon cssClass=\"restart\" iconName=\"restart\" on:click={startGame}/>\n        </div>\n    {:else if !gameRunning}\n        <p transition:fade>Press any arrow key to begin playing.</p>\n    {/if}\n</div>\n<svelte:window on:keydown={onKeyDown} />\n\n<style>\n    p {\n\t\ttext-align: center;\n\t\tfont-size: 4em;\n        font-weight: 200;\n        color: #f5f0f6;\n        z-index: 10;\n        position: relative;\n    }\n    \n    \n</style>",
    "<script>\n    import { options } from '../stores.js'\n    import { afterUpdate } from 'svelte'\n    import Icon from '../ui/Icon.svelte'\n\n    let audio\n    let audioSource\n    let muted = false\n\n    $: soundIcon = muted ? 'sound-muted' : 'sound-on'\n\n    afterUpdate(() => {\n        if ($options.music) {\n            audioSource.src = `../../audio/${$options.music}`\n            audioSource.type = `audio/${$options.music.split('.')[1]}`\n            audio.load()\n            audio.play()\n        }\n    })\n</script>\n\n<div class=\"tab\">\n    <button class:active=\"{$options.gameMap === '3HeadedMonster'}\" on:click={() => $options.gameMap = '3HeadedMonster'}>Koro Sea</button>\n    <button class:active=\"{$options.gameMap === 'corals'}\" on:click={() => $options.gameMap = 'corals'}>Coral Sea</button>\n    <button class:active=\"{$options.gameMap === 'giantMonster'}\" on:click={() => $options.gameMap = 'giantMonster'}>Red Sea</button>\n</div>\n\n\n<div class=\"toggle\">\n    <label class=\"switch\">\n        <input type=\"checkbox\" on:click={() => $options = { ...$options, advanced: !$options.advanced }} />\n        <span class=\"slider\"></span>\n    </label>\n    <label>{$options.advanced ? 'Advanced' : 'Easy'}</label>\n</div>\n\n<audio bind:this={audio} {muted} autoplay loop>\n    <source bind:this={audioSource} src=\"\" type=\"\">\n</audio>\n\n<Icon style=\"margin-top: 15px;\" iconName={soundIcon} on:click={() => muted = !muted}/>\n\n<style>\n    .toggle {\n        display: block;\n    }\n\n    .switch {\n        position: relative;\n        display: inline-block;\n        width: 60px;\n        height: 34px;\n    }\n\n    .switch input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    .slider:before {\n        position: absolute;\n        content: \"\";\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    input:checked + .slider {\n        background-color: #2196F3;\n    }\n\n    input:focus + .slider {\n        box-shadow: 0 0 1px #2196F3;\n    }\n\n    input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n    }\n\n    .tab {\n        display: block;\n        float: left;\n        border-radius: 5px;\n        border: 1px solid #ccc;\n        background-color: #f1f1f1;\n        width: auto;\n        height: auto;\n    }\n\n    .tab button {\n        display: block;\n        background-color: inherit;\n        color: black;\n        width: 100%;\n        border: none;\n        outline: none;\n        text-align: left;\n        cursor: pointer;\n        transition: 0.4s;\n        font-size: 17px;\n        margin-bottom: auto;\n    }\n\n    .tab button:hover {\n        background-color: #a5cff0;\n    }\n\n    .tab button.active {\n        background-color: #2196F3;\n    }\n\n</style>",
    "\n<script>\nexport let shrimpPositions\n\n</script>\n\n{#each shrimpPositions as position, i}\n    <div style=\"left: {position.x}px; top: {position.y}px;\" class=\"body\" />\n{/each}\n\n\n<style>\n    .body {\n        background-color: rgb(134, 187, 247);\n        border: black 1px solid;\n        position: absolute;\n        width: 24px;\n        height: 24px;\n        z-index: 3;\n    }\n\n</style>",
    "<script>\n    export let iconName\n    export let cssClass = ''\n    export let style = ''\n</script>\n\n<svg {style} class=\"icon {cssClass}\" on:click>\n    <use xlink:href=\"../../icons/icons-sprite.svg#{iconName}\" />\n</svg>\n\n<style>\n    .icon {\n        width: 28px;\n        height: 28px;\n        cursor: pointer;\n        z-index: 3;\n    }\n\n    .restart {\n        width: 35px; \n        height: 35px;\n        filter: invert(100);\n    }\n\n</style>"
  ],
  "names": [],
  "mappings": "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"
}